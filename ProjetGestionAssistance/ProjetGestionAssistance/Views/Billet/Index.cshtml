@*pour utiliser la PaginatedList*@
@using ProjetGestionAssistance.Models.Services

@model ListePaginee<ProjetGestionAssistance.Models.Billet>
@{
    ViewData["Title"] = "Index";

    var ordreCourrant = ViewData["ordre"];
    var numPageCourante = Model.IndexDePage;
    var precDesactive = !Model.APagePrecedente ? "disabled" : "";
    var suivantDesactive = !Model.APageSuivante ? "disabled" : "";
}


<h2>Liste des billets</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                Titre
            </th>
            <th>
                Description
            </th>
            <th>
                Etat
            </th>
            <th>
                Auteur
            </th>
            <th>
                Departement
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id" asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)">
                    @Html.DisplayFor(modelItem => item.Titre)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Etat)
            </td>
            <td>
                <a asp-controller="Comptes" asp-action="Details" asp-route-id="@item.AuteurId">
                    @Html.DisplayFor(modelItem => item.Auteur.Prenom)
                    @Html.DisplayFor(modelItem => item.Auteur.Nom)
                </a>
            </td>
            <td>
                <a asp-controller="Departements" asp-action="Details" asp-route-id="@item.DepartementId">
                    @Html.DisplayFor(modelItem => item.Departement.Nom)
                </a>

            </td>
            <td>
                @if (item.Etat != "EN TRAITEMENT") { 

                <a asp-action="Modification" asp-route-id="@item.Id" asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)">Modifier</a> <span>|</span>
                <a asp-action="Suppression" asp-route-id="@item.Id" asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)">Supprimer</a>
                }
            </td>
        </tr>
}
    </tbody>

</table>






<div class="col-lg-12">
    <ul class="pagination justify-content-center">
        <li class="page-item"><a asp-action="Index" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(Model.IndexDePage - 1)" class="page-link btn @precDesactive">Pr&eacute;c&eacute;dant </a></li>
        @for (int i = 1; i <= Model.NbPagesTotal; i++)
        {
            var pageDesactive = Model.PageCourante(i) ? "btn-secondary disabled" : "";
            <li class="page-item"><a asp-action="Index" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(i)" class="page-link btn @pageDesactive">@i</a></li>
        }
        
        <li class="page-item"><a asp-action="Index" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(Model.IndexDePage + 1)" class="page-link btn @suivantDesactive">Suivant</a></li>
    </ul>
</div>


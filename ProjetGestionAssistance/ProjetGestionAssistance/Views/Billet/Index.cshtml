@*pour utiliser la PaginatedList*@
@using ProjetGestionAssistance.Models.Services
@using Microsoft.AspNetCore.Http;

@model ListePaginee<ProjetGestionAssistance.Models.Billet> 
@{
    ViewData["Title"] = "Index";

    var nomListeBillet = ViewData["NomListeBillet"];
    var ordreCourrant = ViewData["ordre"];
    var numPageCourante = Model.IndexDePage;
    var precDesactive = !Model.APagePrecedente ? "disabled" : "";
    var suivantDesactive = !Model.APageSuivante ? "disabled" : "";
}

<h2>Liste des billets @(nomListeBillet)</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sort="Titre" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(numPageCourante)" asp-route-direction="@((string)ViewData["direction"] == "Up" ? "Down" : "Up")">
                    Titre
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="Description" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(numPageCourante)" asp-route-direction="@((string)ViewData["direction"] == "Up" ? "Down" : "Up")">
                    Description
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="Etat" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(numPageCourante)" asp-route-direction="@((string)ViewData["direction"] == "Up" ? "Down" : "Up")">
                    Etat
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="Auteur" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(numPageCourante)" asp-route-direction="@((string)ViewData["direction"] == "Up" ? "Down" : "Up")">
                    Auteur
                </a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sort="Departement" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(numPageCourante)" asp-route-direction="@((string)ViewData["direction"] == "Up" ? "Down" : "Up")">
                    Departement
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-action="Details" asp-route-sort="@ViewData["sort"]" asp-route-direction="@ViewData["direction"]" asp-route-id="@item.Id" asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)">
                    @Html.DisplayFor(modelItem => item.Titre)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Etat)
            </td>
            <td>
                <span>
                    @Html.DisplayFor(modelItem => item.Auteur.Prenom)
                    @Html.DisplayFor(modelItem => item.Auteur.Nom)
                </span>
            </td>
            <td>
                <a asp-controller="Departement" asp-action="Details" asp-route-id="@item.DepartementId">
                    @Html.DisplayFor(modelItem => item.Departement.Nom)
                </a>

            </td>
            <td>
                @if ((item.CompteId == Context.Session.GetInt32("_Id") && item.Etat == "En traitement") || item.Etat == "Nouveau")
                {

                    <a asp-action="Modification" asp-route-sort="@ViewData["sort"]" asp-route-direction="@ViewData["direction"]" asp-route-id="@item.Id" asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)">Modifier</a> 
                    @if(item.CompteId != Context.Session.GetInt32("_Id")) { 
                    <span>|</span>

                    <a asp-action="Suppression" asp-route-id="@item.Id" asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)">Supprimer</a> 
                    @if (ordreCourrant.ToString() == "equipe")

                    {
                        @if (item.CompteId == null)
                        {
                            <span>|</span> <a asp-action="Accepter" asp-route-id="@item.Id"  asp-route-ordrePrecedent="@(ordreCourrant)" asp-route-pagePrecedente="@(numPageCourante)" >ACCEPTER</a>

                        }
                        else
                        {
                            <span>|</span>  @Html.DisplayFor(modelItem => item.Compte.Prenom);
                        }

                    }
                    }

                }
            </td>
        </tr>
}
    </tbody>

</table>






<div class="col-lg-12">
    <ul class="pagination justify-content-center">
        <li class="page-item"><a asp-action="Index" asp-route-sort="@ViewData["sort"]" asp-route-direction="@ViewData["direction"]" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(Model.IndexDePage - 1)" class="page-link btn @precDesactive">Pr&eacute;c&eacute;dant </a></li>
        @for (int i = 1; i <= Model.NbPagesTotal; i++)
        {
            var pageDesactive = Model.PageCourante(i) ? "btn-secondary disabled" : "";
            <li class="page-item"><a asp-action="Index" asp-route-sort="@ViewData["sort"]" asp-route-direction="@ViewData["direction"]" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(i)" class="page-link btn @pageDesactive">@i</a></li>
        }
        
        <li class="page-item"><a asp-action="Index" asp-route-sort="@ViewData["sort"]" asp-route-direction="@ViewData["direction"]" asp-route-ordre="@(ordreCourrant)" asp-route-page="@(Model.IndexDePage + 1)" class="page-link btn @suivantDesactive">Suivant</a></li>
    </ul>
</div>

